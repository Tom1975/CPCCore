#pragma once

#include "Bus.h"
#include "PPI.h"
#include "FDC.h"
#include "IExpansion.h"
#include "IPrinterPort.h"

#define CPCCOREEMU_API 

class GateArray;
class CRTC;
class Z80;
class CMemory;
class Asic;

class CPCCOREEMU_API CSig
{
public:
   CSig(void);
   ~CSig(void);

   void SetLog ( ILog* log ) {log_ = log;};
   void Out (unsigned short address, unsigned char data);
   void In (unsigned char* a, unsigned char b, unsigned char c, bool int_mode_0 = false);
   
   void InterruptRaster();

   void SetPlus(bool plus)
   {
      plus_ = plus;
   }

   void M1 ();

   void Reset ();
   void Propagate();

   void AcqInt ();

   // Expansion slots
   int PlugExpansionModule ( IExpansion* exp);
   void UnpluggExpnsionModule (IExpansion* exp);

   // From Z80
   // From GAte Array
   unsigned char interrupt_io_data_;

   // Generated by CRTC
   bool h_sync_;
   bool h_sync_wr_;

   bool h_sync_on_begining_of_line_;
   bool pri_changed_;

   bool hsync_raise_;
   bool hsync_fall_;
   bool hsync_fall_wr_;

   bool v_sync_;
   bool v_sync_wr_;
   bool dispen_;

   bool req_nmi_;
   bool nmi_;
   // Generated by Gate Array
   bool req_int_;
   bool int_;

   // Bus d'adresse
   Bus* address_bus_;

   // Bus de données
   Bus* data_bus_;

   // ASIC
   Asic * asic_;

   // PPI
   PPI8255 * ppi_;

   // FDC
   FDC*  fdc_;

   // CRTC
   CRTC* crtc_;

   // VGA 
   GateArray* vga_;

   // Z80
   Z80 * z80_;

   // Memory
   Memory * memory_;

   bool fdc_present_;

   bool int_is_raster_;
   bool int_is_gate_array_;

   IPrinterPort* printer_port_;
   // Expansion
   IExpansion* exp_list_[8];
   int nb_expansion_;

protected:
   bool plus_;
   ILog* log_ ;
   unsigned short address_;
   unsigned char data_;
   int delay_;
};

